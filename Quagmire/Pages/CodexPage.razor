@page "/Codex"

@using Codex 
@using Codex.Names
@using Codex.NameModification
@inject Namer namer
@inject SeededMarkovNamer markovNamer

<h1>Names for Cities, Countries, Regions, or whatever else</h1>

<ul>
    @foreach (var placeName in placeNames)
    {
        <li>@placeName</li>
    }
</ul>

<button class="btn btn-primary" @onclick="GenerateSimpleNames">Simple</button>
<button class="btn btn-primary" @onclick="GenerateComplexNames">Complex</button>
<button class="btn btn-primary" @onclick="Test">Test</button>

@code {
    private IEnumerable<string> placeNames = Enumerable.Empty<string>();

    private void GenerateSimpleNames()
    {
        placeNames = Enumerable.Range(0, 10).Select(i => namer.GetName()).ToList();
    }

    private void GenerateComplexNames()
    {
        var modifiers = new List<INameModifier>()
        {
            new ConcatModifier(),
            new SwapModifier()
        };

        var startingName = new DualNounName() { FirstNoun = "Mist", SecondNoun = "Tower" };
        Name name = startingName;

        foreach (var modifier in modifiers)
        {
            name = modifier.Modify(name);
        }

        placeNames = new List<string>() { name.GetName() };
    }

    private async Task Test()
    {
        var name = await markovNamer.GetName("Words");
        placeNames = new List<string>() { name };
    }
}
